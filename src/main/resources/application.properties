# NOMBRE DEL MICROSERVICIO
spring.application.name=sat-aduanas-aop
server.port=8082
server.servlet.context-path=/microservicio-documentos/v1

# MONITOREO
management.context-path=/actuator
# Descomentar si se quieren exponer todos los endpoints de actuator.
# (Por defecto, solo se exponen los endpoints info y health. [https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html])
management.endpoints.web.exposure.include=*
# Mostrar la informacion de salud a todos los usuarios (tambien a los usuarios sin autorizacion).
management.endpoint.health.show-details=ALWAYS

# EUREKA
# Direccion del servidor de Eureka.
eureka.client.serviceUrl.defaultZone=http://eureka:password@apdesatprec01:8761/sat-eureka-server/eureka/
# Cada cuanto se registra el servicio con el servidor de Eureka.
eureka.instance.leaseRenewalIntervalInSeconds=10

# CONFIGURACION EUREKA
eureka.instance.health-check-url-path=${server.servlet.context-path}${management.context-path}/health
eureka.instance.status-page-url-path=${server.servlet.context-path}${management.context-path}/info
eureka.instance.home-page-url-path= ${server.servlet.context-path}${management.context-path}
eureka.instance.metadata-map.user.name=eureka
eureka.instance.metadata-map.user.password=password
eureka.instance.metadata-map.management.context-path=${server.servlet.context-path}${management.context-path}

# BASE DE DATOS
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/Sistemas_Operativos
spring.datasource.username=postgres
spring.datasource.password=Oscar4597
spring.datasource.sql-script-encoding=UTF-8



#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.connection.useUnicode=true
logging.level.org.hibernate.sql=debug
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace
logging.level.root=info



# CONFIGURACION DE HIBERNATE
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.type=trace
#spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.jdbc.batch_size=10
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

spring.jpa.properties.hibernate.connection.characterEncoding=utf-8  
spring.jpa.properties.hibernate.connection.CharSet=utf-8  
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.properties.hibernate.jdbc.time_zone=GMT-6
# ACCESO A OTRO MICROSERVICIO POR MEDIO DE EUREKA
# MICROSERVICIO2: nombre en Eureka del microservicio que desea consumirse.
# sat.microservicio2.pingUrl=http://MICROSERVICIO2/path/del/metodo/a/consumir/


file.upload-dir=C:\SAT





# HABILITAR FILTRO EN LAS RESPUESTAS JSON
# Permite el uso de llaves en el query de la peticion
server.tomcat.relaxed-query-chars={,}
# Nivel de anidamiento que puede leer la expresion regular en los filtros
squiggly.deep.nested.query=5
# Indica si se habilita Squiggly filter
squiggly.filter.enabled=true
# Indica si se permite el uso de filtros de squiggly en el servidor
squiggly.filter.annotation.enabled=true
# Indica si se permite el uso de filtros de squiggly en el cliente
squiggly.filter.fields.enabled=true


# VALIDACION DE RECAPTCHA
google.recaptcha.verify.url=https://www.google.com/recaptcha/api/siteverify
google.recaptcha.verify.secret=6LeiIG8UAAAAALZIcsipFL2Rewn45k5L-kWF1kXJ

logging.file.name=logs/Documentitos.log


spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.enabled=true
